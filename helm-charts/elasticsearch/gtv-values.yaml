fullnameOverride: "elasticsearch"

global:
  storageClass: "ebs-sc"

image:
  registry: docker.io
  repository: bitnami/elasticsearch
  tag: 8.5.1-debian-11-r0
  digest: ""

security:
  enabled: true
  elasticPassword: "p8nLFWqmjCfq1pXZAu3x"
  tls:
    restEncryption: false
    autoGenerated: true
    verificationMode: "none"
    master:
      existingSecret: ""
    data:
      existingSecret: ""
    ingest:
      existingSecret: ""
    coordinating:
      existingSecret: ""

# ingress:
#   enabled: true
#   pathType: ImplementationSpecific
#   apiVersion: ""
#   hostname: karros-dev-es.nonprod.karrostech.net
#   path: /
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/rewrite-target: /  
#     # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#   tls: true
#   extraHosts:
#   - path: /*
#     backend:
#       serviceName: ssl-redirect
#       servicePort: use-annotation

master:
  masterOnly: true
  replicaCount: 1
  heapSize: 1024m
  persistence:
    enabled: true
    size: 8Gi
  # podAntiAffinityPreset: "hard"
  nodeSelector: 
    nodeType: non-disruption
  tolerations:
  - key: dedicated
    operator: Equal
    value: statefulset

data:
  replicaCount: 1
  heapSize: 1024m
  persistence:
    enabled: true
    size: 10Gi
  # podAntiAffinityPreset: "hard"
  nodeSelector:
    nodeType: non-disruption
  tolerations:
  - key: dedicated
    operator: Equal
    value: statefulset

coordinating:
  replicaCount: 1
  heapSize: 1024m
  # podAntiAffinityPreset: "hard"
  nodeSelector:
    nodeType: disruption

ingest:
  enabled: false

metrics:
  enabled: false

# extraEnvVarsSecret: aws-s3-secret

# initScripts: 
#   init_s3_connection.sh: |
#     #!/bin/sh 
#     echo "${ACCESS_KEY}" | /opt/bitnami/elasticsearch/bin/elasticsearch-keystore add --stdin s3.client.default.access_key
#     echo "${SECRET_KEY}" | /opt/bitnami/elasticsearch/bin/elasticsearch-keystore add --stdin s3.client.default.secret_key